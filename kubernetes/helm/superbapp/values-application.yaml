# Default values for superbapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
auth:
  enabled: true
  replicas: 1

  service:
    annotations: { }
    type: ClusterIP
    externalPort: 3000
    loadBalancerIP: ""
    loadBalancerSourceRanges: [ ]

  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:282602319731:certificate/be94e5e2-a49a-4b31-af62-a109fa3cdbfd
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/subnets: subnet-0d592d8f8001b1ce4, subnet-02a2f09d26c67a342
      alb.ingress.kubernetes.io/success-codes: 200,302
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/group.name: api
      kubernetes.io/ingress.class: alb
    host: "api.wernichbekker.com"
    path: "/auth"

  mongodb:
    url: "mongodb-1644241797.superbapp.svc.cluster.local"
    user: "superb"
    password: "superb"

mongodb:
  enabled: true
  auth:
    databases:
      - "superb"
    passwords:
      - "superb"
    usernames:
      - "superb"
    rootPassword: "superb"
    rootUser: "superb"

booking:
  enabled: true
  replicas: 1

  service:
    annotations: { }
    type: ClusterIP
    externalHttpPort: 3101
    externalGrpcPort: 3100
    loadBalancerIP: ""
    loadBalancerSourceRanges: [ ]

  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:282602319731:certificate/be94e5e2-a49a-4b31-af62-a109fa3cdbfd
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/subnets: subnet-0d592d8f8001b1ce4, subnet-02a2f09d26c67a342
      alb.ingress.kubernetes.io/success-codes: 200,302
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/group.name: api
      kubernetes.io/ingress.class: alb
    host: "api.wernichbekker.com"
    grpcPath: "/bookinggrpc"
    httpPath: "/booking"

graphql:
  enabled: true
  replicas: 1

  service:
    annotations: { }
    type: ClusterIP
    externalPort: 3200
    loadBalancerIP: ""
    loadBalancerSourceRanges: [ ]

  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:282602319731:certificate/be94e5e2-a49a-4b31-af62-a109fa3cdbfd
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/subnets: subnet-0d592d8f8001b1ce4, subnet-02a2f09d26c67a342
      alb.ingress.kubernetes.io/success-codes: 200,302
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/group.name: api
      kubernetes.io/ingress.class: alb
    host: "graphql.wernichbekker.com"
    path: "/"


client:
  enabled: true
  replicas: 1

  service:
    annotations: { }
    type: ClusterIP
    externalPort: 3300
    loadBalancerIP: ""
    loadBalancerSourceRanges: [ ]

  ingress:
    enabled: true
    annotations:
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:282602319731:certificate/be94e5e2-a49a-4b31-af62-a109fa3cdbfd
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/subnets: subnet-0d592d8f8001b1ce4, subnet-02a2f09d26c67a342
      alb.ingress.kubernetes.io/success-codes: 200,302
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/group.name: api
      kubernetes.io/ingress.class: alb
    host: "client.wernichbekker.com"
    path: "/"

  containerTag: "0.1"

imagePullSecrets: []
nameOverride: "superbapp"
fullnameOverride: "superbapp-chart"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "superbapp"

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
