{{- if .Values.booking.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "superbapp.fullname" . }}-booking
spec:
  replicas: {{ .Values.booking.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      ## multiple booking pods can safely run concurrently
      maxSurge: 25%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: superbapp-booking
      component: booking
      release: {{ .Release.Name }}

  template:
    metadata:
      labels:
        app: superbapp-booking
        component: booking
        release: {{ .Release.Name }}
    spec:
      restartPolicy: Always
      containers:
        - name: superbapp-booking
          imagePullPolicy: IfNotPresent
          ports:
            - name: booking-grpc
              containerPort: 3000
              hostPort: 4100
              protocol: TCP
            - name: booking-http
              containerPort: 3001
              hostPort: 4101
              protocol: TCP
          image: taptap21/superbapp-booking:latest
          env:
            - name: MONGODB_URL
              value: "mongodb://{{ .Values.mongodb.auth.rootUser }}:{{ .Values.mongodb.auth.rootPassword }}@{{ .Release.Name }}-mongodb"

          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            exec:
              command:
                - "ash"
                - "-c"
                - "wget --no-verbose --tries=1 --spider http://localhost:3001/healthz"
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            exec:
              command:
                - "ash"
                - "-c"
                - "wget --no-verbose --tries=1 --spider http://localhost:3001/healthz"


{{- end }}
